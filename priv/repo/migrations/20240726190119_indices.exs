defmodule Shopifex.Repo.Migrations.Indices do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    drop(constraint(:cart_items, "cart_items_price_variant_id_fkey"))

    drop(constraint(:cart_items, "cart_items_product_variant_id_fkey"))

    alter table(:cart_items) do
      modify(
        :product_variant_id,
        references(:product_variants,
          column: :id,
          name: "cart_items_product_variant_id_fkey",
          type: :uuid,
          prefix: "public",
          on_delete: :delete_all
        ),
        null: false
      )
    end

    execute(
      "ALTER TABLE cart_items alter CONSTRAINT cart_items_product_variant_id_fkey NOT DEFERRABLE"
    )

    alter table(:cart_items) do
      modify(
        :price_variant_id,
        references(:price_variants,
          column: :id,
          name: "cart_items_price_variant_id_fkey",
          type: :uuid,
          prefix: "public",
          on_delete: :delete_all
        ),
        null: false
      )
    end

    execute(
      "ALTER TABLE cart_items alter CONSTRAINT cart_items_price_variant_id_fkey NOT DEFERRABLE"
    )
  end

  def down do
    drop(constraint(:cart_items, "cart_items_price_variant_id_fkey"))

    alter table(:cart_items) do
      modify(
        :price_variant_id,
        references(:price_variants,
          column: :id,
          name: "cart_items_price_variant_id_fkey",
          type: :uuid,
          prefix: "public"
        ),
        null: true
      )
    end

    drop(constraint(:cart_items, "cart_items_product_variant_id_fkey"))

    alter table(:cart_items) do
      modify(
        :product_variant_id,
        references(:product_variants,
          column: :id,
          name: "cart_items_product_variant_id_fkey",
          type: :uuid,
          prefix: "public"
        ),
        null: true
      )
    end
  end
end
